<% layout("layouts/main") %>

<div class="max-w-3xl mx-auto bg-white dark:bg-dark-surface p-8 shadow-lg dark:shadow-2xl rounded-xl border dark:border-dark-border mt-10 transition-colors duration-300">
  <h1 class="text-4xl font-extrabold text-blue-600 dark:text-primary-400 mb-8 text-center transition-colors duration-300">
    Edit Event
  </h1>

  <form action="/admin/events/edit/<%= event._id %>" method="POST" class="space-y-6">
    <div class="grid grid-cols-1 gap-4">
      <div>
        <label for="title" class="block text-lg font-medium text-gray-700 dark:text-dark-text-primary transition-colors duration-300">Event Title</label>
        <input
          type="text"
          value="<%= event.title %>"
          name="title"
          id="title"
          class="mt-2 w-full p-3 border border-gray-300 dark:border-dark-border bg-white dark:bg-dark-card text-gray-900 dark:text-dark-text-primary rounded-lg shadow-sm focus:ring-2 focus:ring-blue-400 dark:focus:ring-blue-500 focus:outline-none transition-colors duration-300"
          placeholder="Enter event title"
          required
        />
      </div>      <div>
        <label for="description" class="block text-lg font-medium text-gray-700 dark:text-dark-text-primary transition-colors duration-300">Event Description</label>
        <textarea
          name="description"
          id="description"
          rows="4"
          class="mt-2 w-full p-3 border border-gray-300 dark:border-dark-border bg-white dark:bg-dark-card text-gray-900 dark:text-dark-text-primary rounded-lg shadow-sm focus:ring-2 focus:ring-blue-400 dark:focus:ring-blue-500 focus:outline-none transition-colors duration-300"
        ><%= event.description %></textarea>
      </div>
      <div>
        <label for="type" class="block text-lg font-medium text-gray-700 dark:text-dark-text-primary transition-colors duration-300">Type</label>
        <select
          name="type"
          id="type"
          class="mt-2 w-full p-3 border border-gray-300 dark:border-dark-border bg-white dark:bg-dark-card text-gray-900 dark:text-dark-text-primary rounded-lg shadow-sm focus:ring-2 focus:ring-blue-400 dark:focus:ring-blue-500 focus:outline-none transition-colors duration-300"
        >
          <option value="Workshops" <%= event.type === "Workshops" ? "selected" : "" %>>Workshops</option>
          <option value="Talks" <%= event.type === "Talks" ? "selected" : "" %>>Talks</option>
          <option value="Workshops & Talks" <%= event.type === "Workshops & Talks" ? "selected" : "" %>>Workshops & Talks</option>
          <option value="Meetups" <%= event.type === "Meetups" ? "selected" : "" %>>Meetups</option>
          <option value="Networking" <%= event.type === "Networking" ? "selected" : "" %>>Networking</option>
          <option value="Fun" <%= event.type === "Fun" ? "selected" : "" %>>Fun</option>
          <option value="Tech" <%= event.type === "Tech" ? "selected" : "" %>>Tech</option>
          <option value="Other" <%= event.type === "Other" ? "selected" : "" %>>Other</option>
        </select>
      </div>      <div class="grid grid-cols-2 gap-4">
        <div>
          <label for="startDate" class="block text-lg font-medium text-gray-700 dark:text-dark-text-primary transition-colors duration-300">Start Date</label>
          <input
            type="date"
            name="startDate"
            id="startDate"
            value="<%= event.startDate ? (event.startDate.toISOString ? event.startDate.toISOString().slice(0,10) : event.startDate.slice(0,10)) : '' %>"
            class="mt-2 w-full p-3 border border-gray-300 dark:border-dark-border bg-white dark:bg-dark-card text-gray-900 dark:text-dark-text-primary rounded-lg shadow-sm focus:ring-2 focus:ring-blue-400 dark:focus:ring-blue-500 focus:outline-none transition-colors duration-300"
            required
          />
        </div>
        <div>
          <label for="endDate" class="block text-lg font-medium text-gray-700 dark:text-dark-text-primary transition-colors duration-300">End Date</label>
          <input
            type="date"
            name="endDate"
            id="endDate"
            value="<%= event.endDate ? (event.endDate.toISOString ? event.endDate.toISOString().slice(0,10) : event.endDate.slice(0,10)) : '' %>"
            class="mt-2 w-full p-3 border border-gray-300 dark:border-dark-border bg-white dark:bg-dark-card text-gray-900 dark:text-dark-text-primary rounded-lg shadow-sm focus:ring-2 focus:ring-blue-400 dark:focus:ring-blue-500 focus:outline-none transition-colors duration-300"
            required
          />
        </div>
      </div>

      <div class="grid grid-cols-2 gap-4">
        <div>
          <label for="startTime" class="block text-lg font-medium text-gray-700 dark:text-dark-text-primary transition-colors duration-300">Start Time</label>
          <input
            type="time"
            name="startTime"
            id="startTime"
            value="<%= event.startTime %>"
            class="mt-2 w-full p-3 border border-gray-300 dark:border-dark-border bg-white dark:bg-dark-card text-gray-900 dark:text-dark-text-primary rounded-lg shadow-sm focus:ring-2 focus:ring-blue-400 dark:focus:ring-blue-500 focus:outline-none transition-colors duration-300"
            required
          />        </div>
        <div>
          <label for="endTime" class="block text-lg font-medium text-gray-700 dark:text-dark-text-primary transition-colors duration-300">End Time</label>
          <input
            type="time"
            name="endTime"
            id="endTime"
            value="<%= event.endTime %>"
            class="mt-2 w-full p-3 border border-gray-300 dark:border-dark-border bg-white dark:bg-dark-card text-gray-900 dark:text-dark-text-primary rounded-lg shadow-sm focus:ring-2 focus:ring-blue-400 dark:focus:ring-blue-500 focus:outline-none transition-colors duration-300"
            required
          />
        </div>
      </div>

      <div>
        <label for="location" class="block text-lg font-medium text-gray-700 dark:text-dark-text-primary transition-colors duration-300">Location</label>
        <input
          type="text"
          name="location"
          id="location"
          value="<%= event.location %>"
          class="mt-2 w-full p-3 border border-gray-300 dark:border-dark-border bg-white dark:bg-dark-card text-gray-900 dark:text-dark-text-primary rounded-lg shadow-sm focus:ring-2 focus:ring-blue-400 dark:focus:ring-blue-500 focus:outline-none transition-colors duration-300"
          placeholder="Enter event location"
          required
        />
      </div>

      <div>
        <label for="image" class="block text-lg font-medium text-gray-700 dark:text-dark-text-primary transition-colors duration-300">Event Image URL</label>
        <input
          type="text"
          name="image"
          id="image"
          value="<%= event.image %>"
          class="mt-2 w-full p-3 border border-gray-300 dark:border-dark-border bg-white dark:bg-dark-card text-gray-900 dark:text-dark-text-primary rounded-lg shadow-sm focus:ring-2 focus:ring-blue-400 dark:focus:ring-blue-500 focus:outline-none transition-colors duration-300"
          placeholder="Paste image URL"
        />
      </div>      <div>
        <label for="club" class="block text-lg font-medium text-gray-700 dark:text-dark-text-primary transition-colors duration-300">Club</label>
        <select
          name="club"
          id="club"
          class="mt-2 w-full p-3 border border-gray-300 dark:border-dark-border bg-white dark:bg-dark-card text-gray-900 dark:text-dark-text-primary rounded-lg shadow-sm focus:ring-2 focus:ring-blue-400 dark:focus:ring-blue-500 focus:outline-none transition-colors duration-300"
        >
          <% clubs.forEach(club => { %>
          <option value="<%= club._id %>" <%= event.club === club._id ? "selected" : "" %>><%= club.name %></option>
          <% }); %>
        </select>
      </div>

      <div>
        <label for="collaborators" class="block text-lg font-medium text-gray-700 dark:text-dark-text-primary transition-colors duration-300">Collaborators</label>
        <div
          id="collaborators-container"
          class="mt-2 flex flex-wrap gap-2 p-3 border border-gray-300 dark:border-dark-border bg-white dark:bg-dark-card rounded-lg shadow-sm min-h-[44px] transition-colors duration-300"
        >
          <!-- Collaborator tags will be rendered by JS -->
        </div>
        <select id="collaborators-select" class="w-full p-2 border border-gray-300 dark:border-dark-border bg-white dark:bg-dark-card text-gray-900 dark:text-dark-text-primary rounded-lg focus:ring-2 focus:ring-blue-400 dark:focus:ring-blue-500 transition-colors duration-300">
          <option value="">Select a collaborator...</option>
          <% clubs.forEach(club => { %>
            <option value="<%= club._id %>" <%= event.collaborators.some(c => c._id == club._id) ? 'disabled' : '' %>><%= club.name %></option>
          <% }); %>
        </select>        <input type="hidden" name="collaborators" id="collaborators-hidden" />
      </div>

      <!-- Event Leads Section -->
      <div>
        <label for="eventLeads" class="block text-lg font-medium text-gray-700 dark:text-dark-text-primary transition-colors duration-300">Event Leads</label>
        <div
          id="eventLeads-container"
          class="mt-2 flex flex-wrap gap-2 p-3 border border-gray-300 dark:border-dark-border bg-white dark:bg-dark-card rounded-lg shadow-sm min-h-[44px] transition-colors duration-300"
        >
          <select id="eventLeads-select" class="w-full p-2 border border-gray-300 dark:border-dark-border bg-white dark:bg-dark-card text-gray-900 dark:text-dark-text-primary rounded-lg focus:ring-2 focus:ring-blue-400 dark:focus:ring-blue-500 transition-colors duration-300">
            <option value="">Select event lead from club members...</option>
            <% clubs.forEach(club => { %>
              <% if (club.currentMembers && club.currentMembers.length > 0) { %>
                <optgroup label="<%= club.name %> - Members">
                  <% club.currentMembers.forEach(member => { %>
                    <option value="<%= member._id %>" data-name="<%= member.name %>" data-email="<%= member.email %>">
                      <%= member.name %> (<%= member.email %>)
                    </option>
                  <% }); %>
                </optgroup>
              <% } %>
              <% if (club.moderators && club.moderators.length > 0) { %>
                <optgroup label="<%= club.name %> - Moderators">
                  <% club.moderators.forEach(moderator => { %>
                    <option value="<%= moderator._id %>" data-name="<%= moderator.name %>" data-email="<%= moderator.email %>">
                      <%= moderator.name %> (<%= moderator.email %>) - Moderator
                    </option>
                  <% }); %>
                </optgroup>
              <% } %>
            <% }); %>
          </select>
        </div>
        <input type="hidden" name="eventLeads" id="eventLeads-hidden" />
        <p class="text-sm text-gray-500 dark:text-dark-text-muted mt-1 transition-colors duration-300">
          Select users from club members and moderators as event leads.
        </p>
      </div>
    </div><button
      type="submit"
      class="w-full bg-blue-500 dark:bg-blue-600 text-white py-3 rounded-lg text-lg font-semibold hover:bg-blue-600 dark:hover:bg-blue-700 transition duration-300"
    >
      Update Event
    </button>
  </form>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const select = document.getElementById("collaborators-select");
    const container = document.getElementById("collaborators-container");
    const hiddenInput = document.getElementById("collaborators-hidden");
    // Pre-populate collaborators from server-side EJS
    let collaborators = [];
    try {
      collaborators = JSON.parse(`<%- JSON.stringify(event.collaborators ? event.collaborators.map(c => ({ id: (c._id && c._id.toString ? c._id.toString() : c._id || ''), name: c.name || '' })) : []) %>`);
      // Remove any with missing id or name
      collaborators = collaborators.filter(c => c.id && c.name);
    } catch (e) { collaborators = []; }

    function updateCollaborators() {
      container.innerHTML = "";
      collaborators.forEach((collaborator) => {
        const tag = document.createElement("span");
        tag.className =
          "bg-blue-500 text-white px-3 py-1 rounded-full text-sm cursor-pointer";
        tag.innerHTML = `${collaborator.name} <span class=\"ml-2 font-bold\">&times;</span>`;
        tag.addEventListener("click", () =>
          removeCollaborator(collaborator.id)
        );
        container.appendChild(tag);
      });
      container.appendChild(select);
      hiddenInput.value = JSON.stringify(collaborators.map((c) => c.id));
    }

    select.addEventListener("change", () => {
      const selectedClubId = select.value;
      const selectedClubName = select.options[select.selectedIndex].text;
      if (
        selectedClubId &&
        !collaborators.find((c) => c.id === selectedClubId)
      ) {
        addCollaborator(selectedClubId, selectedClubName);
        select.value = "";
      }
    });

    function addCollaborator(id, name) {
      collaborators.push({ id, name });
      updateCollaborators();
    }

    function removeCollaborator(id) {
      collaborators = collaborators.filter((c) => c.id !== id);
      updateCollaborators();
    }    updateCollaborators(); // Initial render

    // Event Leads functionality
    const eventLeadsSelect = document.getElementById("eventLeads-select");
    const eventLeadsContainer = document.getElementById("eventLeads-container");
    const eventLeadsHidden = document.getElementById("eventLeads-hidden");
    let eventLeads = [];    // Load existing event leads
    try {
      eventLeads = JSON.parse(`<%- JSON.stringify(event.eventLeads ? event.eventLeads.map(lead => ({ id: lead._id.toString(), name: lead.name, email: lead.email })) : []) %>`);
    } catch (e) { 
      eventLeads = []; 
    }

    eventLeadsSelect.addEventListener("change", (e) => {
      const selectedUserId = e.target.value;
      if (selectedUserId && !eventLeads.some(lead => lead.id === selectedUserId)) {
        const selectedOption = e.target.options[e.target.selectedIndex];
        const userName = selectedOption.getAttribute("data-name");
        const userEmail = selectedOption.getAttribute("data-email");
        
        eventLeads.push({
          id: selectedUserId,
          name: userName,
          email: userEmail
        });
        updateEventLeads();
        e.target.value = "";
      }
    });

    function removeEventLead(userId) {
      eventLeads = eventLeads.filter((lead) => lead.id !== userId);
      updateEventLeads();
    }

    function updateEventLeads() {
      eventLeadsContainer.innerHTML = "";
      
      eventLeads.forEach((lead) => {
        const tag = document.createElement("span");
        tag.className = "bg-green-500 text-white px-3 py-1 rounded-full text-sm cursor-pointer";
        tag.innerHTML = `${lead.name} <span class="ml-2 font-bold" onclick="removeEventLead('${lead.id}')">&times;</span>`;
        eventLeadsContainer.appendChild(tag);
      });

      eventLeadsContainer.appendChild(eventLeadsSelect);
      eventLeadsHidden.value = JSON.stringify(eventLeads.map(lead => lead.id));
    }

    // Make removeEventLead function global
    window.removeEventLead = removeEventLead;

    // Initial render for event leads
    updateEventLeads();
  });
</script>
